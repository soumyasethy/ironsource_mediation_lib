// Mocks generated by Mockito 5.0.5 from annotations
// in ironsource_mediation/test/ironsource_listener_test.dart.
// Do not manually edit this file.

import 'package:ironsource_mediation/src/ironsource_error.dart' as _i4;
import 'package:ironsource_mediation/src/ironsource_impression_data.dart'
    as _i6;
import 'package:ironsource_mediation/src/ironsource_listeners.dart' as _i2;
import 'package:ironsource_mediation/src/ironsource_ow_credit_info.dart' as _i5;
import 'package:ironsource_mediation/src/ironsource_rv_placement.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [IronSourceRewardedVideoListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockIronSourceRewardedVideoListener extends _i1.Mock
    implements _i2.IronSourceRewardedVideoListener {
  MockIronSourceRewardedVideoListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onRewardedVideoAdOpened() =>
      super.noSuchMethod(Invocation.method(#onRewardedVideoAdOpened, []),
          returnValueForMissingStub: null);
  @override
  void onRewardedVideoAdClosed() =>
      super.noSuchMethod(Invocation.method(#onRewardedVideoAdClosed, []),
          returnValueForMissingStub: null);
  @override
  void onRewardedVideoAvailabilityChanged(bool? isAvailable) =>
      super.noSuchMethod(
          Invocation.method(#onRewardedVideoAvailabilityChanged, [isAvailable]),
          returnValueForMissingStub: null);
  @override
  void onRewardedVideoAdRewarded(_i3.IronSourceRVPlacement? placement) => super
      .noSuchMethod(Invocation.method(#onRewardedVideoAdRewarded, [placement]),
          returnValueForMissingStub: null);
  @override
  void onRewardedVideoAdShowFailed(_i4.IronSourceError? error) => super
      .noSuchMethod(Invocation.method(#onRewardedVideoAdShowFailed, [error]),
          returnValueForMissingStub: null);
  @override
  void onRewardedVideoAdClicked(_i3.IronSourceRVPlacement? placement) => super
      .noSuchMethod(Invocation.method(#onRewardedVideoAdClicked, [placement]),
          returnValueForMissingStub: null);
  @override
  void onRewardedVideoAdStarted() =>
      super.noSuchMethod(Invocation.method(#onRewardedVideoAdStarted, []),
          returnValueForMissingStub: null);
  @override
  void onRewardedVideoAdEnded() =>
      super.noSuchMethod(Invocation.method(#onRewardedVideoAdEnded, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [IronSourceInterstitialListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockIronSourceInterstitialListener extends _i1.Mock
    implements _i2.IronSourceInterstitialListener {
  MockIronSourceInterstitialListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onInterstitialAdReady() =>
      super.noSuchMethod(Invocation.method(#onInterstitialAdReady, []),
          returnValueForMissingStub: null);
  @override
  void onInterstitialAdLoadFailed(_i4.IronSourceError? error) => super
      .noSuchMethod(Invocation.method(#onInterstitialAdLoadFailed, [error]),
          returnValueForMissingStub: null);
  @override
  void onInterstitialAdOpened() =>
      super.noSuchMethod(Invocation.method(#onInterstitialAdOpened, []),
          returnValueForMissingStub: null);
  @override
  void onInterstitialAdClosed() =>
      super.noSuchMethod(Invocation.method(#onInterstitialAdClosed, []),
          returnValueForMissingStub: null);
  @override
  void onInterstitialAdShowSucceeded() =>
      super.noSuchMethod(Invocation.method(#onInterstitialAdShowSucceeded, []),
          returnValueForMissingStub: null);
  @override
  void onInterstitialAdShowFailed(_i4.IronSourceError? error) => super
      .noSuchMethod(Invocation.method(#onInterstitialAdShowFailed, [error]),
          returnValueForMissingStub: null);
  @override
  void onInterstitialAdClicked() =>
      super.noSuchMethod(Invocation.method(#onInterstitialAdClicked, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [IronSourceBannerListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockIronSourceBannerListener extends _i1.Mock
    implements _i2.IronSourceBannerListener {
  MockIronSourceBannerListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onBannerAdLoaded() =>
      super.noSuchMethod(Invocation.method(#onBannerAdLoaded, []),
          returnValueForMissingStub: null);
  @override
  void onBannerAdLoadFailed(_i4.IronSourceError? error) =>
      super.noSuchMethod(Invocation.method(#onBannerAdLoadFailed, [error]),
          returnValueForMissingStub: null);
  @override
  void onBannerAdClicked() =>
      super.noSuchMethod(Invocation.method(#onBannerAdClicked, []),
          returnValueForMissingStub: null);
  @override
  void onBannerAdScreenPresented() =>
      super.noSuchMethod(Invocation.method(#onBannerAdScreenPresented, []),
          returnValueForMissingStub: null);
  @override
  void onBannerAdScreenDismissed() =>
      super.noSuchMethod(Invocation.method(#onBannerAdScreenDismissed, []),
          returnValueForMissingStub: null);
  @override
  void onBannerAdLeftApplication() =>
      super.noSuchMethod(Invocation.method(#onBannerAdLeftApplication, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [IronSourceOfferwallListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockIronSourceOfferwallListener extends _i1.Mock
    implements _i2.IronSourceOfferwallListener {
  MockIronSourceOfferwallListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onOfferwallAvailabilityChanged(bool? isAvailable) => super.noSuchMethod(
      Invocation.method(#onOfferwallAvailabilityChanged, [isAvailable]),
      returnValueForMissingStub: null);
  @override
  void onOfferwallOpened() =>
      super.noSuchMethod(Invocation.method(#onOfferwallOpened, []),
          returnValueForMissingStub: null);
  @override
  void onOfferwallShowFailed(_i4.IronSourceError? error) =>
      super.noSuchMethod(Invocation.method(#onOfferwallShowFailed, [error]),
          returnValueForMissingStub: null);
  @override
  void onOfferwallAdCredited(_i5.IronSourceOWCreditInfo? creditInfo) => super
      .noSuchMethod(Invocation.method(#onOfferwallAdCredited, [creditInfo]),
          returnValueForMissingStub: null);
  @override
  void onGetOfferwallCreditsFailed(_i4.IronSourceError? error) => super
      .noSuchMethod(Invocation.method(#onGetOfferwallCreditsFailed, [error]),
          returnValueForMissingStub: null);
  @override
  void onOfferwallClosed() =>
      super.noSuchMethod(Invocation.method(#onOfferwallClosed, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [IronSourceImpressionDataListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockIronSourceImpressionDataListener extends _i1.Mock
    implements _i2.IronSourceImpressionDataListener {
  MockIronSourceImpressionDataListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onImpressionSuccess(_i6.IronSourceImpressionData? impressionData) =>
      super.noSuchMethod(
          Invocation.method(#onImpressionSuccess, [impressionData]),
          returnValueForMissingStub: null);
}

/// A class which mocks [IronSourceConsentViewListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockIronSourceConsentViewListener extends _i1.Mock
    implements _i2.IronSourceConsentViewListener {
  MockIronSourceConsentViewListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void consentViewDidLoadSuccess(String? consentViewType) => super.noSuchMethod(
      Invocation.method(#consentViewDidLoadSuccess, [consentViewType]),
      returnValueForMissingStub: null);
  @override
  void consentViewDidFailToLoad(_i4.IronSourceConsentViewError? error) =>
      super.noSuchMethod(Invocation.method(#consentViewDidFailToLoad, [error]),
          returnValueForMissingStub: null);
  @override
  void consentViewDidShowSuccess(String? consentViewType) => super.noSuchMethod(
      Invocation.method(#consentViewDidShowSuccess, [consentViewType]),
      returnValueForMissingStub: null);
  @override
  void consentViewDidFailToShow(_i4.IronSourceConsentViewError? error) =>
      super.noSuchMethod(Invocation.method(#consentViewDidFailToShow, [error]),
          returnValueForMissingStub: null);
  @override
  void consentViewDidAccept(String? consentViewType) => super.noSuchMethod(
      Invocation.method(#consentViewDidAccept, [consentViewType]),
      returnValueForMissingStub: null);
}
